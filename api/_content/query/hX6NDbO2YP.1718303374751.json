{"_path":"/blog/v3-6","_dir":"blog","_draft":false,"_partial":false,"_locale":"","title":"Nuxt 3.6","description":"Nuxt 3.6 is out, bringing performance improvements, fully static server components, better style inlining, static presets, increased type safety - and much more.","image":"/assets/blog/v3-6.png","authors":[{"name":"Daniel Roe","avatarUrl":"https://github.com/danielroe.png","link":"https://twitter.com/danielcroe","twitter":"danielcroe"}],"date":"2023-06-23T00:00:00.000Z","category":"Release","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"spa-loading-indicator"},"children":[{"type":"element","tag":"img","props":{"style":"display:inline","src":"https://nuxt.com/assets/design-kit/icon-green.svg","width":36,"height":36,"vAlign":"center"},"children":[]},{"type":"text","value":" ¬†SPA loading indicator"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If your site is served with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ssr: false"}]},{"type":"text","value":" or you have disabled server-rendering on some of your pages, you might be particularly interested in the new "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21640","rel":["nofollow"]},"children":[{"type":"text","value":"built-in SPA loading indicator"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can now place an HTML file in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"~/app/spa-loading-template.html"}]},{"type":"text","value":" with some HTML you would like to use to render a loading screen that will be rendered until your app is hydrated on these pages."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"üëâ "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"By default an animated Nuxt icon is rendered"}]},{"type":"text","value":". You can completely disable this indicator by setting "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"spaLoadingTemplate: false"}]},{"type":"text","value":" in your nuxt configuration file."}]},{"type":"element","tag":"h2","props":{"id":"Ô∏è-performance-improvements"},"children":[{"type":"text","value":"‚ö°Ô∏è Performance improvements"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The first thing that happens when your app is hydrated is that your plugins run, and so we now perform "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21611","rel":["nofollow"]},"children":[{"type":"text","value":"build-time optimisations on your plugins"}]},{"type":"text","value":", meaning they do not need to be normalised or reordered at runtime."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We also include your error component JS in your main entrypoint, meaning that if an error occurs when a user has no connectivity, you can still handle it with your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"~/error.vue"}]},{"type":"text","value":". (This also should decrease your total bundle size.)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"üëâ Compared to Nuxt 3.5.3, the minimal client bundle has decreased by ~0.7kB. Let's keep this up!"}]},{"type":"element","tag":"h2","props":{"id":"fully-static-server-components"},"children":[{"type":"text","value":"üî• Fully static server components"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It has been possible to use server components on static pages, but until now they would increase the payload size of your application. That is no longer true. We now store "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21461","rel":["nofollow"]},"children":[{"type":"text","value":"rendered server components as separate files, which are preloaded before navigation"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"üëâ "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"This does rely on the new, richer JSON payload format"}]},{"type":"text","value":", so make sure you have not disabled this by setting "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"experimental.renderJsonPayloads"}]},{"type":"text","value":" to false."}]},{"type":"element","tag":"h2","props":{"id":"better-style-inlining"},"children":[{"type":"text","value":"üé® Better style inlining"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're monitoring your metrics closely and have not turned off "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"experimental.inlineSSRStyles"}]},{"type":"text","value":", you should see more CSS inlined in your page, and a significantly external CSS file. We're now "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21573","rel":["nofollow"]},"children":[{"type":"text","value":"better at deduplicating global CSS"}]},{"type":"text","value":", particularly added by libraries like tailwind or unocss."}]},{"type":"element","tag":"h2","props":{"id":"animation-controls"},"children":[{"type":"text","value":"üé¨ Animation controls"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To give you more fine-grained control over your page/layout components, for example to create custom transitions with GSAP or other libraries, we now allow you to set "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/19403","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"pageRef"}]},{"type":"text","value":" on "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"<NuxtPage>"}]}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/19465","rel":["nofollow"]},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"layoutRef"}]},{"type":"text","value":" on "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"<NuxtLayout>"}]}]},{"type":"text","value":". These will get passed through to the underlying DOM elements."}]},{"type":"element","tag":"h2","props":{"id":"automatic-static-preset-detection"},"children":[{"type":"text","value":"‚ú® Automatic 'static' preset detection"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Up to now, running "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":" produced the same output on every deployment provider, but with Nuxt 3.6 we now enable "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21655","rel":["nofollow"]},"children":[{"type":"text","value":"static provider presets"}]},{"type":"text","value":" automatically. That means if you are deploying a static build (produced with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":") to a supported provider (currently vercel and netlify with cloudflare and github pages coming soon) we'll prerender your pages with special support for that provider."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This means we can configure any route rules (redirects/headers/etc) that do not require a server function. So you should get the best of both worlds when deploying a site that doesn't require runtime SSR. It also unblocks use of "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/image","rel":["nofollow"]},"children":[{"type":"text","value":"Nuxt Image"}]},{"type":"text","value":" on Vercel (with more potential for automatic provider integration coming soon)."}]},{"type":"element","tag":"h2","props":{"id":"increased-type-safety"},"children":[{"type":"text","value":"üí™ Increased type safety"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We now have better support for server-specific "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"#imports"}]},{"type":"text","value":" and augmentations if you are using the new "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"~/server/tsconfig.json"}]},{"type":"text","value":" we shipped in Nuxt 3.5. So when importing from "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"#imports"}]},{"type":"text","value":" in your server directory, you'll get IDE auto-completion for the right import locations in Nitro, and won't see Vue auto-imports like "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useFetch"}]},{"type":"text","value":" that are unavailable within your server routes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You should now also have "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21666","rel":["nofollow"]},"children":[{"type":"text","value":"type support for runtime Nitro hooks"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, we have "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21700","rel":["nofollow"]},"children":[{"type":"text","value":"removed more locations where objects had a default "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"any"}]},{"type":"text","value":" type"}]},{"type":"text","value":". This should improve type safety within Nuxt in a number of locations where unspecified types fell back to any:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"RuntimeConfig"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"PageMeta"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"NuxtApp['payload']"}]},{"type":"text","value":" (accessible now from "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"NuxtPayload"}]},{"type":"text","value":" interface)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ModuleMeta"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can find out more about how to "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21700","rel":["nofollow"]},"children":[{"type":"text","value":"update your code"}]},{"type":"text","value":" if this affects you in the original PR."}]},{"type":"element","tag":"h2","props":{"id":"Ô∏è-nitro-25-built-in"},"children":[{"type":"text","value":"‚öóÔ∏è Nitro 2.5 built-in"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This release ships with new Nitro 2.5, which has a "},{"type":"element","tag":"a","props":{"href":"https://github.com/unjs/nitro/releases/tag/v2.5.0","rel":["nofollow"]},"children":[{"type":"text","value":"whole list of exciting improvements"}]},{"type":"text","value":" that are worth checking out."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Of particular note is experimental support for streaming, which is also enabled by a "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21665","rel":["nofollow"]},"children":[{"type":"text","value":"couple of changes"}]},{"type":"text","value":" in Nuxt itself."}]},{"type":"element","tag":"h2","props":{"id":"Ô∏è-new-tools-for-module-authors"},"children":[{"type":"text","value":"üõ†Ô∏è New tools for module authors"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This release brings a number of utilities for modules authors to easily "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21331","rel":["nofollow"]},"children":[{"type":"text","value":"add type templates"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/pull/21246","rel":["nofollow"]},"children":[{"type":"text","value":"assert compatibility"}]},{"type":"text","value":" with a given version of "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"another"}]},{"type":"text","value":" module."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition, this release will finally unlock a new "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt/module-builder"}]},{"type":"text","value":" mode that should improve type support for module authors. If you're a module author, you might consider following "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/starter/pull/392","rel":["nofollow"]},"children":[{"type":"text","value":"these migration steps"}]},{"type":"text","value":" to try it out in the coming days."}]},{"type":"element","tag":"h2","props":{"id":"upgrading"},"children":[{"type":"text","value":"‚úÖ Upgrading"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As usual, our recommendation for upgrading is to run:"}]},{"type":"element","tag":"pre","props":{"className":"language-sh shiki shiki-themes material-theme-lighter material-theme-lighter material-theme-palenight","code":"npx nuxi upgrade --force\n","language":"sh","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-light:#E2931D;--shiki-default:#E2931D;--shiki-dark:#FFCB6B"},"children":[{"type":"text","value":"npx"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#91B859;--shiki-default:#91B859;--shiki-dark:#C3E88D"},"children":[{"type":"text","value":" nuxi"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#91B859;--shiki-default:#91B859;--shiki-dark:#C3E88D"},"children":[{"type":"text","value":" upgrade"}]},{"type":"element","tag":"span","props":{"style":"--shiki-light:#91B859;--shiki-default:#91B859;--shiki-dark:#C3E88D"},"children":[{"type":"text","value":" --force\n"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will refresh your lockfile as well, and ensures that you pull in updates from other dependencies that Nuxt relies on, particularly in the unjs ecosystem."}]},{"type":"element","tag":"h2","props":{"id":"full-changelog"},"children":[{"type":"text","value":"üìÉ Full changelog"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read the full release notes on "},{"type":"element","tag":"a","props":{"href":"https://github.com/nuxt/nuxt/releases/tag/v3.6.0","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/nuxt/nuxt/releases/tag/v3.6.0"}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"spa-loading-indicator","depth":2,"text":" ¬†SPA loading indicator"},{"id":"Ô∏è-performance-improvements","depth":2,"text":"‚ö°Ô∏è Performance improvements"},{"id":"fully-static-server-components","depth":2,"text":"üî• Fully static server components"},{"id":"better-style-inlining","depth":2,"text":"üé® Better style inlining"},{"id":"animation-controls","depth":2,"text":"üé¨ Animation controls"},{"id":"automatic-static-preset-detection","depth":2,"text":"‚ú® Automatic 'static' preset detection"},{"id":"increased-type-safety","depth":2,"text":"üí™ Increased type safety"},{"id":"Ô∏è-nitro-25-built-in","depth":2,"text":"‚öóÔ∏è Nitro 2.5 built-in"},{"id":"Ô∏è-new-tools-for-module-authors","depth":2,"text":"üõ†Ô∏è New tools for module authors"},{"id":"upgrading","depth":2,"text":"‚úÖ Upgrading"},{"id":"full-changelog","depth":2,"text":"üìÉ Full changelog"}]}},"_type":"markdown","_id":"content:7.blog:13.v3-6.md","_source":"content","_file":"7.blog/13.v3-6.md","_extension":"md"}